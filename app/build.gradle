apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lydiaralph.decisiontracker"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    lintOptions {
        warning 'InvalidPackage'
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '28.0.3'
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Androidx
    implementation "androidx.appcompat:appcompat:${property('androidx.appcompat.version')}"
    implementation "androidx.legacy:legacy-support-v4:${property('androidx.legacy.version')}"
    implementation "androidx.recyclerview:recyclerview:${property('androidx.recyclerview.version')}"
    implementation "androidx.annotation:annotation:${property('androidx.appcompat.version')}"
    implementation "com.google.android.material:material:${property('com.google.android.material.version')}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Dependency Injection
    annotationProcessor "com.google.dagger:dagger-compiler:${property('dagger.version')}"
    implementation "com.google.dagger:dagger:${property('dagger.version')}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${property('dagger.version')}"
    implementation "com.google.dagger:dagger-android-support:${property('dagger.version')}"

    // For pie chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Room
    annotationProcessor "androidx.room:room-compiler:${property('androidx.lifecycle.version')}"
    implementation "androidx.room:room-compiler:${property('androidx.lifecycle.version')}"
    implementation "androidx.room:room-runtime:${property('androidx.lifecycle.version')}"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-common:${property('androidx.lifecycle.version')}"
    implementation "androidx.lifecycle:lifecycle-extensions:${property('androidx.lifecycle.version')}"
    implementation "androidx.lifecycle:lifecycle-viewmodel:${property('androidx.lifecycle.version')}"
    implementation "androidx.lifecycle:lifecycle-livedata:${property('androidx.lifecycle.version')}"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:${property('androidx.lifecycle.version')}"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.room:room-testing:${property('androidx.lifecycle.version')}"
    testImplementation "androidx.arch.core:core-testing:${property('androidx.lifecycle.version')}"

    androidTestImplementation "androidx.test.ext:junit:${property('androidx.test.version')}"
    androidTestImplementation "androidx.test:rules:${property('androidx.test.version')}"
    androidTestImplementation "androidx.test:runner:${property('androidx.test.version')}"
    androidTestImplementation "androidx.test:core:${property('androidx.test.version')}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${property('espresso.version')}"
    androidTestImplementation "androidx.arch.core:core-testing:${property('androidx.lifecycle.version')}"
}

